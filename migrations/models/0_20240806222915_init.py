from tortoise import BaseDBAsyncClient


async def upgrade(db: BaseDBAsyncClient) -> str:
    return """
        CREATE TABLE IF NOT EXISTS "aerich" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "version" VARCHAR(255) NOT NULL,
    "app" VARCHAR(100) NOT NULL,
    "content" JSON NOT NULL
);
CREATE TABLE IF NOT EXISTS "cliente" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "name" VARCHAR(50) NOT NULL,
    "email" VARCHAR(50) NOT NULL,
    "address" VARCHAR(50) NOT NULL,
    "telephone" VARCHAR(15) NOT NULL,
    "created_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS "cor" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "name" VARCHAR(50) NOT NULL,
    "value" REAL NOT NULL,
    "created_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS "usuario" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "name" VARCHAR(50) NOT NULL,
    "email" VARCHAR(50) NOT NULL,
    "password" VARCHAR(50) NOT NULL,
    "created_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP
);
CREATE TABLE IF NOT EXISTS "pedidos" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "status" VARCHAR(50) NOT NULL,
    "total_value" VARCHAR(50) NOT NULL,
    "created_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "finished_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "cliente_id" BIGINT NOT NULL REFERENCES "cliente" ("id") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "orcamento" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "service" VARCHAR(50) NOT NULL,
    "value" REAL NOT NULL,
    "descount" REAL NOT NULL,
    "created_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "pedidos_id" BIGINT REFERENCES "pedidos" ("id") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "camiseta" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "size_shirt" VARCHAR(50) NOT NULL,
    "type_cloth" VARCHAR(50) NOT NULL,
    "type_shirt" VARCHAR(50) NOT NULL,
    "color_cloth" VARCHAR(50) NOT NULL,
    "quantity" INT NOT NULL  DEFAULT 1,
    "created_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "orcamento_id" BIGINT REFERENCES "orcamento" ("id") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "pintura" (
    "id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,
    "img_url" VARCHAR(50) NOT NULL,
    "size_painting" INT NOT NULL,
    "value_colors" REAL NOT NULL,
    "created_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "updated_at" TIMESTAMP NOT NULL  DEFAULT CURRENT_TIMESTAMP,
    "orcamento_id" BIGINT REFERENCES "orcamento" ("id") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "pintura_camiseta" (
    "camiseta_id" BIGINT NOT NULL REFERENCES "camiseta" ("id") ON DELETE CASCADE,
    "pinturamodel_id" BIGINT NOT NULL REFERENCES "pintura" ("id") ON DELETE CASCADE
);
CREATE TABLE IF NOT EXISTS "cor_pintura" (
    "pintura_id" BIGINT NOT NULL REFERENCES "pintura" ("id") ON DELETE CASCADE,
    "cormodel_id" BIGINT NOT NULL REFERENCES "cor" ("id") ON DELETE CASCADE
);"""


async def downgrade(db: BaseDBAsyncClient) -> str:
    return """
        """
